
services:
  source_postgres:
    image: postgres:17
    container_name: source_postgres
    environment:
      POSTGRES_DB: ${SOURCE_POSTGRES_DB}
      POSTGRES_USER: ${SOURCE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${SOURCE_POSTGRES_PASSWORD}
    ports:
      - "5437:5432"
    volumes:
      - ./source_db_init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${SOURCE_POSTGRES_USER} -d ${SOURCE_POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    networks:
      - elt_network

  destination_postgres:
    image: postgres:17
    container_name: destination_postgres
    environment:
      POSTGRES_DB: ${DESTINATION_POSTGRES_DB}
      POSTGRES_USER: ${DESTINATION_POSTGRES_USER}
      POSTGRES_PASSWORD: ${DESTINATION_POSTGRES_PASSWORD}
    ports:
      - "5438:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DESTINATION_POSTGRES_USER} -d ${DESTINATION_POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    networks:
      - elt_network

  elt_script:
    build:
      context: ./elt
    container_name: elt_script
    depends_on:
      source_postgres:
        condition: service_healthy
      destination_postgres:
        condition: service_healthy
    environment:
      SOURCE_POSTGRES_HOST: ${SOURCE_POSTGRES_HOST}
      SOURCE_POSTGRES_DB: ${SOURCE_POSTGRES_DB}
      SOURCE_POSTGRES_USER: ${SOURCE_POSTGRES_USER}
      SOURCE_POSTGRES_PASSWORD: ${SOURCE_POSTGRES_PASSWORD}
      DESTINATION_POSTGRES_HOST: ${DESTINATION_POSTGRES_HOST}
      DESTINATION_POSTGRES_DB: ${DESTINATION_POSTGRES_DB}
      DESTINATION_POSTGRES_USER: ${DESTINATION_POSTGRES_USER}
      DESTINATION_POSTGRES_PASSWORD: ${DESTINATION_POSTGRES_PASSWORD}
    networks:
      - elt_network

networks:
  elt_network:
    driver: bridge
